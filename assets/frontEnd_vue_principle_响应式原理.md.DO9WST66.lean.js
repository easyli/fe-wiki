import{_ as o,c as n,j as e,a as l,t as r,a9 as i,o as u}from"./chunks/framework.iiD0ugpG.js";const D=JSON.parse('{"title":"Vue 响应式原理","description":"","frontmatter":{},"headers":[],"relativePath":"frontEnd/vue/principle/响应式原理.md","filePath":"frontEnd/vue/principle/响应式原理.md","lastUpdated":1722485984000}'),a={name:"frontEnd/vue/principle/响应式原理.md"},s=e("h1",{id:"vue-响应式原理",tabindex:"-1"},[l("Vue 响应式原理 "),e("a",{class:"header-anchor",href:"#vue-响应式原理","aria-label":'Permalink to "Vue 响应式原理"'},"​")],-1),_=e("h2",{id:"vue2响应式原理",tabindex:"-1"},[l("Vue2响应式原理 "),e("a",{class:"header-anchor",href:"#vue2响应式原理","aria-label":'Permalink to "Vue2响应式原理"'},"​")],-1),p=e("p",null,"Vue 2 的响应式原理主要是基于 Object.defineProperty 实现的。以下是 Vue 2 响应式系统的核心原理：",-1),c=e("li",null,[e("p",null,[e("strong",null,"数据劫持（Data Observation）"),l("：")]),e("ul",null,[e("li",null,"当你创建一个 Vue 实例时，Vue 会遍历 data 对象中的所有属性。"),e("li",null,[l("对每个属性，Vue 使用 "),e("code",null,"Object.defineProperty"),l(" 来定义 getter 和 setter。")]),e("li",null,"这个过程使得 Vue 能够监听属性的读取和修改操作。")])],-1),d=e("p",null,[e("strong",null,"依赖追踪（Dependency Tracking）"),l("：")],-1),V=e("li",null,"每个依赖关系都会跟踪哪些 watcher（观察者）依赖于这个属性。",-1),g=i("",2),h=i("",4);function P(t,f,m,T,y,v){return u(),n("div",null,[s,_,p,e("ol",null,[c,e("li",null,[d,e("ul",null,[e("li",null,[l("在模板中，当你使用数据对象中的属性时（如 "),e("code",null,r(t.message),1),l("），Vue 会建立一个与该属性的依赖关系。")]),V])]),g]),h])}const O=o(a,[["render",P]]);export{D as __pageData,O as default};
