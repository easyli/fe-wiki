import{_ as s,c as a,o as i,a9 as n}from"./chunks/framework.Disn2Jq4.js";const b=JSON.parse('{"title":"ES6 字符串的扩展","description":"","frontmatter":{},"headers":[],"relativePath":"ECMAScript/es6/字符串的扩展.md","filePath":"ECMAScript/es6/字符串的扩展.md","lastUpdated":1722485984000}'),l={name:"ECMAScript/es6/字符串的扩展.md"},e=n(`<h1 id="es6-字符串的扩展" tabindex="-1">ES6 字符串的扩展 <a class="header-anchor" href="#es6-字符串的扩展" aria-label="Permalink to &quot;ES6 字符串的扩展&quot;">​</a></h1><h2 id="模板字符串" tabindex="-1">模板字符串 <a class="header-anchor" href="#模板字符串" aria-label="Permalink to &quot;模板字符串&quot;">​</a></h2><p>ES6 引入了模板字符串（Template Strings），也被称为模板字面量，是一种方便拼接字符串的新语法。模板字符串使用反引号（\`）来包裹字符串，并允许在字符串中插入变量、表达式和多行文本。</p><h3 id="字符串插值" tabindex="-1">字符串插值 <a class="header-anchor" href="#字符串插值" aria-label="Permalink to &quot;字符串插值&quot;">​</a></h3><p>使用<code>\${}</code>来在模板字符串中插入变量或表达式，其中<code>\${}</code>中的内容会被解析并替换为实际的值。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;John&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 30</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> message</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`Hello, my name is \${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">} and I&#39;m \${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">age</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">} years old.\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(message)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 输出：Hello, my name is John and I&#39;m 30 years old.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="多行字符串" tabindex="-1">多行字符串 <a class="header-anchor" href="#多行字符串" aria-label="Permalink to &quot;多行字符串&quot;">​</a></h3><p>使用模板字符串可以很方便地创建多行文本，不需要使用<code>\\n</code>来手动添加换行符。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> multiLineText</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  This is a multi-line text.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  It spans across multiple lines</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  and maintains the line breaks.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(multiLineText)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/* 输出：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  This is a multi-line text.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  It spans across multiple lines</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  and maintains the line breaks.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="嵌套模板字符串" tabindex="-1">嵌套模板字符串 <a class="header-anchor" href="#嵌套模板字符串" aria-label="Permalink to &quot;嵌套模板字符串&quot;">​</a></h3><p>模板字符串可以嵌套在其他模板字符串中，使得字符串拼接更加灵活。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Alice&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> greeting</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`Hello, \${\`my name is \${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}\`}.\`</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(greeting)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 输出：Hello, my name is Alice.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="带标签的模板字符串" tabindex="-1">带标签的模板字符串 <a class="header-anchor" href="#带标签的模板字符串" aria-label="Permalink to &quot;带标签的模板字符串&quot;">​</a></h3><p>可以在模板字符串前添加一个标签函数，这个标签函数将模板字符串的各个部分解析成多个参数，使得我们可以对字符串进行自定义处理。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> tagFunc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">strings</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">...</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(strings) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 包含模板字符串中的文本部分</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(values) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 包含模板字符串中插入的变量部分</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;Bob&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> age</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 25</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">tagFunc</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">\`Hello, my name is \${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">} and I&#39;m \${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">age</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">} years old.\`</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">/* 输出：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  [ &#39;Hello, my name is &#39;, &quot; and I&#39;m &quot;, &#39; years old.&#39; ]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  [ &#39;Bob&#39;, 25 ]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">*/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>模板字符串的引入简化了字符串拼接和多行文本的创建，使得代码更加清晰易读。</p><p>在现代 JavaScript 开发中，模板字符串广泛用于生成 HTML 标记、日志信息、网络请求等多种场景。</p></div>`,16),p=[e];function t(h,k,r,d,c,o){return i(),a("div",null,p)}const m=s(l,[["render",t]]);export{b as __pageData,m as default};
